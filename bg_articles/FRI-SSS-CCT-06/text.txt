 ВЪВЕДЕНИЕ Съхранението и предаването на информацията е много лесно в наши дни (Jafarkhani, H., 2005) . Но това е процес, който се е развивал векове на ред, с гениални разработки и открития (Richardson, T., & etc., 2008). Историческото  развитие  на  теорията  на  кодирането  на  данни  датира  от  1948  г.  с изследванията на Клод Шанън (Van Lint, J. H., 2012). Той се фокусира върху проблема как най-добре да се кодира информацията. Шанън установява, че има фундаментална граница за компресиране на данни без загуба на качество и демонстрира, че е възможно да се кодират съобщения по такъв начин, че броят на допълнително предаваните битове да е възможно най-малък (Verdu, S., 1998). Две години след Шанън, Ричард Хеминг (Hamming, R., 1980) изучава съществуващите до тогава кодове за кодиране. Той експериментира с кодовете по четност и нечетност, които могат само да откриват грешка. Хеминг създава код, който не само открива, но и посочва точното място на грешката и може да я коригира. Този код е известен в теорията на кодирането като Код на Хеминг. Изучаване на различните методи за кодиране и декодиране на данни е включено в учебната програма на компютърните инженери. Методите за кодиране и декодиране са с различна сложност и трябва да бъдат прецизно пояснени и симулирани на студентите, за да могат да ги прилагат. Целта на настоящия доклад е да се представи един подход за проектиране и реализиране на интерактивен обучителен софтуер за решаване на задачи за код на Хеминг. Обучителният софтуер трябва да подпомогне студентите в усвояването на учебния материал по темата и да ги улесни в последователното проследяване на алгоритъма за кодиране и откриване на единични и двойни грешки по матричен метод на код на Хеминг.                                                  17 Докладът е представен на студентската научна сесия на 27.04.2018 г. в секция „Комуникационна и компютърна техника“ с оригинално заглавие на български език: ИНТЕРАКТИВЕН СОФТУЕР ЗА ИЗУЧАВАНЕ НА АЛГОРИТЪМА ЗА КОДИРАНЕ НА ДАННИ ПО МАТРИЧЕН МЕТОД В КОД НА ХЕМИНГ    - 79 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 3.4. КОД НА ХЕМИНГ Кодът на Хеминг е  систематичен код, който открива двойни и коригира единични грешки.  Контролните  разряди  на  кода  са  разположени  на  точно  определени  места  в закодираната кодова комбинация – степените на двойката, съответно на 1, 2, 4, 8, 16 и т.н. позиции.  Контролните  разряди  контролират  по  четност  определена  група  от информационните разряди. На Фиг. 1 са представени позициите и групите на контролните разряди в код на Хеминг (Smrikarova, S. & etc. 2013).   Фиг. 1. Позиции и групи на контролните разряди в код на Хеминг Броят на контролните разряди се определя с формулата:    k ≥ log (n+1),  (1) 2където „n“ e броят на информационните разряди в кодовата комбинация, а k – броят на контролните разряди. За кодиране на кода на Хеминг се използват два метода: обикновен и матричен.  МАТРИЧЕН МЕТОД ЗА КОДИРАНЕ НА КОД НА ХЕМИНГ При  матричния  метод  за  изчисляване  на  контролните  разряди  се  строи  контролна матрица H. Пример за такава матрица е представен на Фиг. 2.  Фиг. 2. Контролна матрица на Код на Хеминг Контролните разряди се изчисляват на база на уравненията за кодиране (Фиг. 3), които се определят от контролната матрица. За декодиране се използват аналогични уравнения, но в тях участват и се проверяват и контролните разряди.  Фиг. 3. Уравнения за кодиране  ИЗИСКВАНИЯ  КЪМ  ИНТЕРАКТИВНИЯ  СОФТУЕР  ЗА  КОДИРАНЕ  И ДЕКОДИРАНЕ В КОД НА ХЕМИНГ С ИЗПОЛЗВАНЕ НА МАТРИЧЕН МЕТОД Към проектирания обучителен софтуер са формулирани следните изисквания:   Интуитивен съвременен интерфейс за работа;   - 80 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 3.4.   Автоматизирано решаване на задачата в модула за преподавателя;   Постъпково решаване на задачата за студенти, с отчитане на допуснатите грешки и време за работа;   Предоставяне на възможност за кодиране на кодове с голяма дължина;   Извеждане на точната позиция на грешката, при наличието на такава;   Защита от неоторизиран достъп;   Улесняване работата на преподавателите чрез предоставяне на средство за бърза и лесна проверка на задачи.  ПРОГРАМНИ ЕЗИЦИ И ИНСТРУМЕНТАЛНИ СРЕДСТВА За разработката на приложението е избрана комбинацията от езикът за програмиране C# и графичната система Windows Presentation Foundation – WPF (Bourton, S., & etc, 2008). Езикът  C#  е  широко  използван  и  често  предпочитан  при  изработване  на  приложения  с графичен интерфейс, като предоставя възможност за бърза и лесна разработка с помощта на многото готови вградени функции, които позволяват на програмиста да се фокусира, не толкова върху синтаксиса и изучаването на възможностите на езика, а върху изграждането на нужната логика за решаване на дадения проблем. Системата WPF бе избрана пред други такива като Windows Forms поради значително намаления flicker при голям брой изобразени елементи на дисплея и улесненото му ползване. Графичните елементи са изградени с помощта на Extensible Application Markup Language (XAML). XAML дава възможност за използването на гъвкави елементи като DataGrid и прави използването им и тяхната визуална модификация много  лесни  както  и  от  кода  по  време  на  изпълнение  на  приложението  така  и  от инициализиращия код. Използвана е и средата за програмиране Microsoft Visual Studio 2017. За разработката беше възможно да се използва и текстов редактор, но използването на среда за програмиране, и в частност на Visual Studio, повишава многократно производителността на програмиста и намалява времето за разработка на приложението. Всичко това се намира под структурата  .NET  framework,  която  е  предназначена  за  системи,  използващи  Microsoft Windows и не е оптимизирана за системи използващи iOS или Linux.   ФУНКЦИОНАЛНИ ВЪЗМОЖНОСТИ НА ПРИЛОЖЕНИЕТО  Обучителният  софтуер  е  реализиран  с  два  модула:  модул  за  студенти  и  модул  за преподаватели.  На  Фиг.  4  е  представен  началния  екран  на  приложението,  при  който потребителят  избира  съответния  модул.  За  работа  с  преподавателския  модул  се  изисква автентикация чрез въвеждане на парола.    Фиг. 4. Начален екран и форми за автентикация На Фиг. 5 са представени основните етапи в алгоритъма, който описва процеса на кодиране и откриване на единични грешки по матричен метод на код на Хеминг.   - 81 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 3.4.  Фиг. 5. Алгоритъм за кодиране и откриване на единични грешки в код на Хеминг На Фиг. 6 е представено едно примерно решение на задача за кодиране в код на Хеминг с кодова комбинация от 8 бита. В преподавателския модул контролните матрици и формулите за изчисляване на контролните разряди се генерират автоматично.   - 82 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 3.4.   Фиг. 6. Преподавателски модул     Интерактивният софтуер предоставя възможност на потребителя да въвежда позиция на грешката. На този етап софтуерът декодира единични грешки, но в бъдещо доразвиване на приложението се предвижда да се декодират и двойни грешки.  Кодът на Хеминг има способността да открива точната позиция на единичната грешка. При матричния метод откриването на позицията на грешката се реализира чрез намиране на стълб наречен Синдром, който се сравнява със стълбовете в контролната матрица. На Фиг. 7 в червен цвят е оцветен синдром, който открива единична греша в позиция S4.    Фиг. 7. Въвеждане и откриване на единична грешка  ИЗВОДИ  Представеният интерактивен образователен софтуер за кодиране и декодиране в код на Хеминг по матричен метод ще се използва в практическите упражнения по дисциплината   - 83 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 3.4. „Надеждност  и  диагностика  на  компютърни  системи“  със  студентите  от  специалност „Компютърни системи и технологии“.  Модулът за преподаватели ще подпомогне преподавателите по дисциплината в по-бързата и точна проверка на зададените задачи. Модулът за студентите проследява поетапно всички важни итерации за решаване на задачи с код на Хеминг – матричен метод. На всеки от етапите се проверяват знанията на студентите. При три грешно въведени отговора, студентът е насочен към верния отговор, за да успее да продължи на следващите етапи. Отчитането на грешките стимулира студентите към по-прецизна работа и стремеж към усъвършенстване. В приложението  е  предвидено  и  отчитане  на  времето  за  решаване,  което  въвежда  и допълнителен състезателен елемент като предизвикателство за решаване на задачите.  С помощта на представения интерактивен софтуер ще могат да се решават и задачи с по-голяма  разрядност  на  кодираната  кодова  информация.  На  този  етап  в  упражненията  по дисциплината се кодират и декодират кодови комбинации с максимална дължина от 15 бита. Благодарение на предложения в доклада програмен алгоритъм, ще може да се експериментира и да се проследяват и задачи с по-голяма разрядност, което ще допринесе до въвеждане на нови задачи в упражненията, по-близки до реалните задачи, които се използват за кодиране на данни в компютърните системи.  ACKNOWLEDGMENTS Този доклад се публикува със съдействието на проект 2018-EEA-01 „Методи за събиране, организация,  достъп,  обработка  и  анализ  на  големи  обеми  от  структурирани  и неструктурирани  данни“,  финансиран  от  фонд  „Научни  изследвания“  на  Русенски университет „Ангел Кънчев“.  