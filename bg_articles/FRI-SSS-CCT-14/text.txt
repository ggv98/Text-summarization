 ВЪВЕДЕНИЕ Golang, наричан още Go, е нов програмен език. Създаден е от инженерите на Google и има  за  цел  да  обедини  предимствата  на  съществуващите  езици  отстранявайки  техните недостатъци. Той е език с отворен код и всичките му библиотеки са публично достъпни. Усъвършенстват се и се поддържат от Golang общността (Golang Community).  Кратка история Езикът Go е анонсиран през ноември 2009 година, а версия 1.0 е представена през март 2012 година. Използван е в някои от продукционните системи на Google, както и от много други компании и проекти с отворен код. Go започва като експеримент на инженерите от Gоogle – Robert Griesemer, Rob Pike и Ken Thompson. Идеята им е била да се създаде език, който да отстрани най-често срещаните проблеми (зависимост от платформата, проблеми с управлението на паметта, генерирането на голям  обем  излишен  код)  при  останалите  езици  като  същевременно  запази  техните положителни характеристики. При създаването му основните цели са били:   статично типизиран (static typing) и мащабируем до големи системи – като Java или C++;   продуктивен и четим, без излишен код (boilerplate) – като Ruby или Python;   да не изисква интегрирана среда за разработване, но все пак да ги поддържа;                                                  25 Докладът е представен на студентската научна сесия на 27 април 2018 в секция „Комуникационна и компютърна техника“ с оригинално заглавие на български език: GOLANG – ВЪВЕДЕНИЕ И ОСНОВНИ ХАРАКТЕРИСТИКИ.   - 127 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 3.4.   възможност за мрежово и многопроцесорно програмиране. В  интервюта  след  излизането  на  езика,  разработчиците  споделят,  че  основната  им мотивация за разработването на нов език е факта, че и тримата не харесвали C++.  Основни характеристики Golang  е  самодокументиращ  се  език.  Това  означава,  че  всеки  go  файл,  метод  или структура трябва да съдържа коментар, описващ основната функционалност или употреба. Този език е с отворен код. Това от своя страна означава, че общността на езика отговаря за неговата поддръжка (проверка и отстраняване на грешките в съществуващите библиотеки) и развитие (създаване на нови библиотеки и функционалности).  Инсталация Инсталацията на Go се извършва чрез инсталатор предоставен от сайта на езика. При отварянето на сваления MSI файл се създава съответната папка на езика. В тази папка ще се съхраняват всички файлове (програми) написани на Golang, както и всички необходими библиотеки. За да може програмите, написани на Go да сработят е необходимо да се добави bin папката в променливите на средата (environment variables) на операционната система. По конкретно в променливата PATH. След добавянето вече може да се пишат програми на Golang. Езикът на Google не е зависим от средата за разработване и следователно не съдържа такава в инсталатора. Самият инсталатор предоставя възможност на операционната система да „разбира“ езика, но от своя страна не включва нищо друго – няма основни библиотеки или среда за разработване. Go e език с отворен код (open source), което означава, че всичко свързано с езика е публично достъпно. Повечето библиотеки (включително и основните) са достъпни в GitHub. Свалянето се осъществява чрез команден ред, въвеждайки определен код за изтегляне на избраните библиотеки. Предварително трябва да се инсталира приложението Git, за да може да се осъществи достъпа през Go. За улеснено компилиране на програмите и четенето на кода може да се използва Visual Studio Code. Посоченият начин за инсталация на Golang е конктерно за Windows операционна система и платформата GitHub. По подобен начин се осъществява и на останалите операционни системи. Повече информация има на сайта на езика (Golang Official Website, 2018).  Синтактични особености Една програма на Go включва всички файлове, съдържащи се в нейната папка и се нарича, както се казва директорията ѝ. Програмата винаги се стартира от main метода на go файла, носещ същото име. В езика няма наследяване, т.е. не съществуват директиви като overload, override или overwrite. Той разчита на директно напасване (mapping) за осъществяването на по-бърз достъп до методите. Един  go  файл  задължително  съдържа  пакет,  към  който  принадлежи  файла,  и използваните  библиотеки.  Може  да  съдържа  методи  и/или  структури,  като  винаги декларацията на структурите предхожда описанието на методите (фиг. 7).    - 128 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 3.4.  Фиг. 7. Примерна програма на Golang  Всяка нова команда започва на нов ред, т.е. не могат да се запишат две команди на един ред. Класовете  тук  се  наричат  структури.  Декларацията  на  структурата  съдържа  само описанието на основните полета. При дефинирането на даден метод се посочва дали той принадлежи на някой клас или не. Не е задължително клас методите да се намират само във файла, в който се намира структурата. Декларирането на типа на дадена променлива става чрез ключовата дума var името на променливата и типа ѝ. За деклариране на тип на променлива и присвояване на стойност се използва операторът „:=“. За присвояване стойност от друг тип се използва същият оператор. Ако типът на променливата вече е деклариран, присвояването на стойност става с „=“. Ако се използва „:=“ за присвояване на стойност от същия тип, то няма да възникне грешка, но стойността на променливата няма да се промени. В езика няма do … while цикъл, а for цикъла се осъществява с помощта на while цикъл, който се бележи с ключова дума for (фиг. 8).   Фиг. 8. Примерен for цикъл  Съществува for each цикъл, който се описва с помощта на ключовата дума range () (фиг. 9). При този начин на обхождане се инициализират две променливи  – текущи индекс и стойност. Специален символ „_“ означава, че за програмната логика тази стойност не е от значение и не се използва, т.е. тя не се присвоява на променлива и не заема памет.   - 129 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 3.4.  Фиг. 9. Пример за foreach цикъл  Езикът поддържа и условния оператор if … else, който се използва по аналогичен начин на останалите езици (фиг. 10).   Фиг. 10. If … else структура  Особеност  при  този  език  е  че  в  if  условието  може  да  съдържа  освен  проверка  и присвояване на стойността на променливата (фиг. 11). Използва се за по кратко записване.   Фиг. 11. Пример за if условие с присвояване  Операторите за сравнение са: „==“ (равно), „>“, „<“, „>=“, „<=“ и „!=“ (различно). Логическите оператори са: „&&“ (и), „||“ (или) и „!“ (не). Операторът за инкрементиране с единица е „++“, а за декрементиране е „--“. Не  съществува  утвърдена  конвенция  за  именуването  на  променливите  или форматирането на кода. Повечето програмни среди препоръчват свои собствени правила.  Основни източници на информация Все още не съществуват учебници за този език, защото той е постоянно развиващ се и само документиращ се. Основни  източници  на  информация  са:  сайтът  на  езика  golang.org,  платформата github.com, в която се качват повечето библиотеки, и форумът stackoverflow.com. Съществуват и много други платформи, форуми и сайтове създадени специално за Golang.  Статистически данни   - 130 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 3.4. Според TIOBE за този месец (април 2018 год.) Go e едва на 19 място по популярност в света с рейтинг от 1.180 % (фиг. 12). Най-висока популярност езикът е имал в средата на 2017 год. (фиг. 13).   Фиг. 12. Най-популярните езици в света според TIOBE   Фиг. 13. Промяната на популярността на Golang според TIOBE  ЗАКЛЮЧЕНИЕ   - 131 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 3.4. Go е лесен за разбиране и публично достъпен програмен език. Напълно независим от платформата.  Въпреки  това  той  не  е  много  популярен.  Поради  тази  причина  основни източници на информация остават сайта на езика, самите библиотеки и техните описания, и форумите. Езикът разполага с различни методи и библиотеки за динамична валидация на входни данни. Това заедно с мащабируемостта, независимостта от платформата и намаления обем заемана  памет  (по  време  на  работа  и  като  сорс  файлове)  прави  Golang  подходящ  за изграждането  на  различни  уеб  услуги.  От  друга  страна,  липсата  на  каквото  и  да  било наследяване не позволява Go да се използва за приложения разчитащи на фабрики, медиатори или други подобни шаблони за писане на код.  БЛАГОДАРНОСТИ Този доклад се публикува със съдействието на проект 2018-EEA-01 „Методи за събиране, организация,  достъп,  обработка  и  анализ  на  големи  обеми  от  структурирани  и неструктурирани  данни“,  финансиран  от  фонд  „Научни  изследвания“  на  Русенски университет „Ангел Кънчев“.  