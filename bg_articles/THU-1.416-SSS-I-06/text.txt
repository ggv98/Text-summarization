 ВЪВЕДЕНИЕ Софтуерът е навсякъде в нашето ежедневие. Той се е превърнал в неразделна част от съвременното  модерно  общество  –  домакински  уреди,  телекомуникации,  автомобили, самолети, обучение, развлечения и др. В следствие на това науката и технологиите се нуждаят от  висококачествен  софтуер.  Размерът  и  сложността  на  софтуерните  системи  нараства драстично през последните десетилетия и това е устойчива тенденция. Програмните грешки и ненадеждната работа на системите могат да доведат до сериозни, дори фатални последствия и загуби на бизнеса. Това характеризира надеждността като най-важния измерим фактор за повишаване на качеството и сигурността на софтуерните системи. Софтуерна криза създава огромни  възможности  за  изследователите  на  софтуерни  технологии,  както  и  за практикуващите  специалисти.  Възможността  за  производство  на  качествено  софтуерно решение е не само необходимост, но и ключов отличителен фактор за модерния бизнес. Понятието  „софтуерна  надеждност  “се  дефинира  като  „вероятността  на  правилната работа на софтуерната система за определено време в определена среда “[ANSI/IEEE, 1991]. Сред  другите  атрибути  за  качеството  на  софтуера  като  функционалност,  използваемост, обхватност, поддръжка и т.н., надеждността е основният фактор за качеството на софтуера, тъй  като  отговаря  за  способността  на  софтуера  да  се  справя  с  грешките  по  време  на изпълнение,  и/или  способността  на  алгоритъма  да  продължи  да  оперира,  независимо  от настъпили аномалии във входните данни, изчисленията и т.н. Съществуващите техники за анализ на надеждността имат своите недостатъци. На първо място, текущите техники събират данните за отказ по време на тестовете за интеграция или                                                  15 Докладът е представен на студентската научна сесия на 03. 05. 2018 г. в секция „Информатика“ с оригинално заглавие на български език: ТЕХНИКИ ЗА АНАЛИЗ НА НАДЕЖДНОСТТА НА СОФТУЕРНИ СИСТЕМИ И ПРОБЛЕМИ ПРИ ОСИГУРЯВАНЕТО НА НАДЕЖДНОСТ.   - 103 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 6.5. фазите на тестване на системата. Данните за грешки, събрани по време на фазата на късното изпитване, може да са окаже твърде късно за основни промени в проекта. На второ място, данните за неуспех, събирани по време на разработване на системата могат да бъдат взети предвид от разработчиците и по този начин да се избегнат сривове в реална работна среда. Това е особено вярно за висококачествени софтуерни системи, които изискват задълбочено тестване. Трето, настоящите техники или методите за моделиране се основават на някои нереалистични предположения, които правят оценката на надеждността твърде оптимистична спрямо реалните ситуации. Изследването на техники за надеждност на софтуера е необходимо, особено за съвременните софтуерни системи [B. Littlewood and L. Strigini, 2000]. В изложението ще бъдат разгледани основните техники, осигуряващи надеждност на софтуерните  системи  и  ще  бъдат  описани  най-често  появяващите  се  проблеми  при използването им. Нивото на отговорност и огромната сложност на софтуерните компоненти, в рамките на различни системи, влияят в голяма степен на тяхната безопасност и надеждно функциониране, което означава, че е изключително важно да се изследва въздействието на софтуера по отношение на надеждността на системите.  ТЕХНИКИ ЗА АНАЛИЗ НА НАДЕЖДНОСТТА Проучването на техниките за анализ на надеждността на софтуерните системи, води до идентификация  и  предложение  за  решение  на  текущите  проблеми  при  оценяването  на надеждността. В бъдеще се очаква да се предложи метод за оценяване на надеждността. Създаването на примерен модел за оценяване  на надеждността на софтуерните системи е следствие  на  разработването  на  такъв  метод  за  изчисляване,  осигуряващ  софтуерното качеството. Техниките за анализ на надеждността на софтуерните системи могат бъдат групирани в 3 основни категории:   дизайн за надеждност на софтуера – в първата категория надеждността на софтуерната система се постига чрез разработване на надеждни компоненти на системата. Основен момент в тази категория е да се осигури избягване на грешки и толерантност към грешки. Наличните техники включват откриването, предотвратяването на грешки, тяхното отстраняване и допустимост от появяването им.    тестване за надеждност на софтуера – в тази категорията надеждността на софтуерната система се влияе от техниките за тестване, например тестване на натоварването или регресионно тестване. Основната цел на техниките е да се осигури премахването на неизправности. Техниките включват тестване на потока от данни, тестване на невалидни или неочаквани входни данни и свързаните с тях инструменти.    оценка  за  надеждност  на  софтуера  –  в  тази  категория  надеждността  на софтуера  се  демонстрира  най-често  посредством  използване  на  техники  за  моделиране. Основната цел е да се предскаже прогнозирането на грешки. Наличните техники включват задачи за измерване на надеждността на софтуер и инструменти за надеждност на софтуера.  Дизайн на надеждността на софтуера Разработването на високо надежден софтуер от гледна точка на клиента е трудна работа за всички софтуерни инженери. Michael R. Lyu в своята книга обобщава следните четири технически области, които са приложими за постигането на надеждни софтуерни системи и те могат да се разглеждат и като четири техники [M.R. Lyu (ed.), 1996]:   Предотвратяване на грешки: да се избегнат грешки по време на създаването на софтуера;   Отстраняване  на  грешки:  да  се  установи  чрез  проверка  и  валидиране, наличието на грешки и те да се премахнат;   Отклонение при грешка: да се осигури услуга, отговаряща на спецификацията, независимо от наличието или възникването на грешки;   - 104 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 6.5.   Прогнозиране на грешки: да се оцени наличието на грешки както и събитията и последствията, свързани с тях. Това е основният фокус на моделирането на софтуерната надеждност. Предотвратяването  на  грешки  е  първоначалният  защитен  механизъм  срещу ненадеждност на дадена система. То е цел на всяка методология на софтуерното инженерство. Общите подходи включват формални методи в спецификациите на изискванията и проверки на програмите; ранно взаимодействие с потребителя и усъвършенстване на изискванията; инструменти за проектиране на софтуер; принципи, среди и системни техники за многократно използване на компонентите на софтуера. При успешното им прилагане механизмът може напълно да предотврати грешките. За съжаление обхватът на приложението му е ограничен. Механизмите за предотвратяване на грешки не могат да гарантират избягването на всички софтуерни дефекти. При откриването на грешки в софтуера премахването им е следващото средство за защита. Два практически подхода за отстраняване на грешки са софтуерното тестване и софтуерната инспекция, които са станали стандартни практики в областта на осигуряване на качеството. Въпреки това, понякога остават незабелязани грешки в процесите на  тестване  и  проверка.  Те  остават  във  софтуерната  система,  докато  бъдат  открити  от клиентите. Допустимостта към грешки е последната защитна линия при предотвратяване на появите  им.  Тя  е  атрибутът  за  оцеляване  на  софтуерните  системи  по  отношение  на способността  им  да  предоставят  непрекъснато  обслужване  на  клиентите.  Техниките  за допустимост на програмните грешки позволяват на софтуерните системи:  (1) да предотвратят появата на пасивни софтуерни бъгове, като защитно програмиране за проверка на условията за въвеждане, извеждане и забрана на неправилни операции;  (2) да следят появилите се грешки в софтуера с цел да не се разпространяват по-нататък, като рутинни процедури за проверка на неуспешни операции;  (3) да възстановяват софтуерни операции при погрешни условия, като механизми за проверка и обратно връщане; (4) да понасят грешки на ниво система планомерно, като например използването на различни начини на проектиране в разработката на софтуер. И накрая, ако се очаква да възникнат грешки в софтуера, от съществено значение е те да бъдат оценени и предсказани. Прогнозирането на грешки включва формулирането на връзката виновен-неизправност,  разбирането  на  операционната  среда,  създаването  на  модели  за надеждност  на  софтуера,  разработването  на  процедури  и  механизми  за  измерване  на надеждността  на  софтуера,  както  и  анализ  и  оценка  на  резултатите  от  измерванията. Възможността да се определи надеждността на софтуера не само ни дава насоки за качеството на  софтуера  и  кога  да  спрем  тестването,  но  и  предоставя  информация  за  нуждите  на софтуерната поддръжка. Тя може да улесни валидността на гаранцията на софтуера, когато надеждността на софтуера е била правилно сертифицирана.  Тестване на надеждността на софтуера Тестването на софтуер е изследване, което се прави с цел да се даде информация на всички заинтересовани страни за качеството на системата. То трябва да даде обективна и безпристрастна  оценка  на  софтуера,  която  да  позволи  на  бизнеса  да  прецени  и  разбере рисковете от употребата му. Целта за тестването на софтуер е да подобри надеждността на софтуера чрез премахване на грешки преди реалната работа със системата. Като типичен механизъм за отстраняване на грешки, тестването на софтуер е широко разпространено в индустрията за осигуряване на качеството и подобряване на надеждността му. Ефективното тестване  се  дефинира  като  разкриване  на  повечето,  ако  не  всички,  откриваеми  грешки. Техниките за тестване могат да включват изпълнение на програмата с цел откриването на грешки в нея. Тестването може да служи и като метод за статистическа извадка, за да се съберат данни за грешките и да се направи оценка на надеждността на софтуерната система.      - 105 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 6.5. Оценка на надеждността на софтуера Моделирането  на  надеждността  на  софтуера  привлича  все  повече  вниманието  на изследователите  както  за  оценката  -  измерване  на  текущото  му  състояние,  така  и  за прогнозиране - оценка на бъдещото състояние на надеждността на софтуерната система. Моделът за надеждност на софтуера дефинира формата на случаен процес, който описва поведението на програмните повреди по отношение на времето. Исторически преглед, както и перспектива на приложението на моделите за надеждност на софтуера могат да бъдат намерени в [J. Cheng, D.A. Bell, and W. Liu, 1997] и [M.R. Lyu (ed.), 1996]. Съществуват три основни подхода за моделиране на надеждността: подход за зареждане и маркиране на грешки, подход на домейна на данните и подход на домейна на времето, който се счита за най-популярният. Основният принцип на моделирането на надеждността на софтуера в домейна на  времето  е  да  се  създаде  диаграма  на  наблюдаваните  данни  във  време  на  отказ  по предварително определена формула, така че моделът да може да бъде параметризиран със статистически  техники.  Такива  техники  предлагат  методите  Least  Square  или  Maximum Probability. След това моделът може да предостави оценка на съществуващата надеждност или прогнозиране  на  бъдещата  надеждност  чрез  по-прецизирани  техники.  Моделите  за надеждност на софтуера обикновено правят редица общи предположения. Такива, например, са:  (1) Експлоатационната среда, в която трябва да се измерва надеждността, е същата като средата за изпитване, в която е параметризиран моделът за надеждност; (2) След като възникне срив се уточняват причините и той веднага се отстранява; (3) Процесът на отстраняване на грешките няма да доведе до нови сривове;  (4) Броят на грешките, присъщи на софтуера, и начина, по който те се проявяват, така че причиняват сривове, са представени посредством определени математически формули. Тъй като броят на грешките (както и степента на неуспех) на софтуерната система намаляват при тестване, което води до повишаване на надеждността, тези модели често се наричат Модели за повишаване на надеждността на софтуера (Software Reliability Growth Model, SRGM) [M. Jain, T. Manjula, T. R. Gulati, 2011]. Измерване на надеждността на софтуера Измерването на надеждността на софтуера е процес, включващ анализ на изследванията осигуряващи надеждност на системите и оценяването на грешките, взети от тестване на софтуер. На фигура 1 са показани съществените компоненти на надеждността на софтуера с цел нейното измерване.   Дефиниране на целите на надеждността на прототипа на софтуернат система - качеството се дефинира количествено от гледна точка на клиента чрез определяне на грешките и тежестта им, чрез определяне на целта за надеждност и чрез уточняване на баланса между ключовите цели за качество (например надеждност, дата на доставка, цена).   Задаване на ролята на клиент в процеса на изследване на надеждност – създава се така нареченият Оперативен профил, чрез които се определят различните роли и функции в разработката на софтуерната система. Оперативният профил е набор от отделни алтернативи на работата на системата и свързаните с нея вероятности за възникване [M.R. Lyu (ed.), 1996]. Изграждането на оперативен профил насърчава тестери да избират тестови случаи според потребителската употреба на системата, което допринася за по-точна оценка на надеждността на софтуера в тази област.   Разработване на план на процеса на изследване на надеждност чрез тестове - в тази процедура целите за качество и оперативният профил се използват за управление на ресурсите и насочване на проектирането, внедряването и тестването на софтуер.   Изпълнение на тестовете - надеждността по време на тестовете се проследява, за да се анализа с цел внедряване и поддръжка на системата.   Анализ на резултатите от тестовете - надеждността може да бъде анализирана в тази област, за да се валидират усилията за инженеринг на надеждността и да се осигурят обратна връзка за подобряване на етапите на разрабока на софтуерната система. В зависимост   - 106 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 6.5. от резултатите се отварят две възможности, първият вариант е с приемливи резултати, при които системата може да се внедри, при втория - резултатите от тестовете, следователно анализа на надеждността са неприемливи. Във втория случай следва измерване на нивото на надеждност.   Измерване  на  нивото  на  надеждност  –  използват  се  подходящи  модели  и инструменти за измерване на надеждността на софтуера. Тази дейност може да се повтори, докато не бъде постигнато определено ниво на надеждност, което е приемливо и позволява успешната разработка на прототип    Интегриране  на  система  на  потребителя  -  позволява  събиране  на  ранна информация за експлоатацията, ползваемостта и надеждността на новата система.   Подобряване на прототипа – тази дейност има за цял да повиши нивото на надеждност.   Внедряване и поддръжка – се справят с новооткрити грешки или бъгове след инсталацията на софтуера.   Дефиниране на целите на надеждност на прототипа на софтуерна система     Задаване на ролята на клиента в процеса на изследване на надеждността   Разработване на план на процеса на изследване на надеждността чрез тестове                                                                      И   з  п  ъ   л  н  е  н   и  е    н   а    т  е  с  т о   в  е  т  е                                              неприемливо   Анализ на резултатите от тестове       приемливо                                                                                                                неприемливо                                                                         приемливо           И   з м   е   р  в  а  н   е    н  а    н  и   в  о  т  о    н   а    н  а  д   е  ж   д ност   Интегриране на системата на потребителя Подобряване на прототипа Внедряване и поддръжка на системата  Фигура 1. Процесът на изследване на надеждност  ПРОБЛЕМИ Предизвикателствата в надеждността на софтуера не само произтичат от големината, сложността, трудността и новостта на софтуерните приложения в различни области, но също така се отнасят до знанията, обучението и опита на участващите разработчици. Проблемите на надеждността на софтуера, разгледани на ниво системна реализация и проектиране, са описани в таблица 1.  За да се измери надеждността на софтуера, тя трябва да се прогнозира още на етапите проектиране  и  програмиране  на  разработваната  софтуерна  система.  Подобряването  на надеждността на софтуера е трудна задача. Трудността на проблема произтича от това, че оценката  за надеждност  и  безопасност  се  изготвя  след  реализацията  на  дадена  система. Констатирането на грешки в дизайна или изпълнението водят до нарушаване на безопасостта и надеждността, както и до скъпи и ресурсоемки процеси. Преодоляването на този етап е свързано  с  изследване  въздействието  на  софтуера  по  отношение  на  безопасността  на системите.      - 107 - PROCEEDINGS OF UNIVERSITY OF RUSE - 2018, volume 57, book 6.5. Таблица 1. Проблеми, свързани с надеждността на софтуера Проблем  Решение Често подобни системи и дори различни версии  Да  се  направи  оценка  на  тежестта  на на една и съща може да са базирани на различни  възможните  проблеми  и  избор  на спецификации,  затова  различните  софтуерни  подходящ статистически метод във всяка системи се явяват „една от вид“.  спецификация да се вземе решение. При  изграждането  на  система  с  висока Зависимост от хардуерните компоненти, които  надеждност  да  се  предвидят  решения, влияят на софтуерните такива.  които да дефинират подходящи подмени на отказите на хардуерните компоненти. Въвеждане  на  задължителното  ползване Тестерите  следват  интуитивен  подход  при на  подходящи  метрики  за  покритие  на проверка на работоспособността на софтуера. кода и други части на проека. Недостаъчно  изчерпателно  формулирани финкционални и нефункционални изисквания към системата Въвеждане на подходящи критерии, които Изискване за безотказна работа без толеранс на в процеса на разработка на изискванията, грешки,  ограничава  възможностите  за гарантират високо ниво на надеждност статистически анализ на надеждността Противоречиви изисквания към модули, които са взаимосвързани  ЗАКЛЮЧЕНИЕ Надеждността  е  една  от  най-важните  характеристики,  присъщи  на  концепцията “качество на софтуера”. Тъй като разходите за сривове на софтуерни приложения нарастват и тъй  като  грешките  все  повече  оказват  влияние  върху  производителността  на  бизнеса, надеждността на софтуера придобива особено важно място в процеса на разработване и оценка на качеството на софтуерните системи. Грешките в софтуера се дължат на пропуски в процеса на проектирането и разработването му, затова основната задача е усъвършенстване на тези процеси. Решението на това софтуерните системи да функционират правилно и да отговарят на изискванията на клиентите е да се извърши измерването на надеждността по време на ранните етапи на разработката им. Използването на ефективни техники за анализ и оценка на надеждността  на  софтуерните  системи,  които  допринасят  за  подобряване  на  процесите, осигуряващи качеството на софтуерните системи, е цел на софтуерната индустрията, както и голямо предизвикателство на софтуерните разработчици.  